name: Merge PR to Release Branch

on:
  push:
    branches:   
      - 'release**'
  # pull_request:
  #   types: [closed]
  #   branches:   
  #     - 'release**'

jobs:
  build-image:
    runs-on: ubuntu-latest
    env:
      build_config_name: "ride-vips-adapter-nginx-proxy-build-v2"
      base_image_tag: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_PIPELINE_TOKEN_SILVER }}
          namespace: "${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools"
      - name: Apply Build Yaml
        run: |
          cd rsbc_df_vips_adapter_gateway/github_actions_yamls
          oc process -f revproxy_build_template.yml --param-file revproxy_build_params.yml --param OUTPUT_IMAGE_STREAM_TAG=dev-test-build-$GITHUB_SHA | oc apply -f -
      - name: Start the build and push
        run: |
          oc start-build ${{ env.build_config_name }} --follow --wait

  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    env:
      build_config_name: "ride-vips-adapter-nginx-proxy-build-v2"
      base_image_tag: "1"
    steps:  
      - name: Manual approval for deploy to Dev
        run: |
          echo 'manual approval for dev'
      - name: Update deploy manifests for Dev to Argocd
        run: |
          echo 'update deploy dev'
      - name: Manual approval for deploy to test
        run: |
          echo 'manual approval for test'
      - name: Update deploy manifests for test to Argocd
        run: |
          echo 'update deploy test'
      # - name: Apply Build Yaml
      #   run: |
      #     cd rsbc_df_vips_adapter_gateway/github_actions_yamls
      #     oc process -f revproxy_build_template.yml --param-file revproxy_build_params.yml --param OUTPUT_IMAGE_STREAM_TAG=build-$GITHUB_SHA | oc apply -f -
      # - name: Start the build and push
      #   run: |
      #     oc start-build ${{ env.build_config_name }} --follow --wait
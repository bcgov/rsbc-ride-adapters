name: Build and Push Image for PR

on:
  pull_request:
    types: [opened, reopened,edited]
    branches-ignore:   
      - 'main'
      - 'master'
      # - 'release**'


jobs:
  build-image:
    runs-on: ubuntu-latest
    env:
      build_config_name: "ride-vips-adapter-nginx-proxy-build-v2"
      base_image_tag: "1"
      PR_NUMBER: ${{ github.event.number }}


    steps:
      - name: Merge with PR branch
        run: |
          git clone "https://github.com/bcgov/rsbc-ride-adapters"
          git config --global user.email "ride_vips_actions@gov.bc.ca"
          git config --global user.name "ride_vips_actions"
          git config --global pull.rebase true
          cd rsbc-ride-adapters
          git fetch
          git branch -a
          git checkout $GITHUB_HEAD_REF      
          git checkout $GITHUB_BASE_REF  
          git merge $GITHUB_HEAD_REF 
          git checkout -b pr-${{ env.PR_NUMBER }}-branch
          git remote add testbranch https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git push -u testbranch pr-${{ env.PR_NUMBER }}-branch

      - name: Checkout repository
        uses: actions/checkout@v3        
        with:
          ref: testprbranch 
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_PIPELINE_TOKEN_SILVER }}
          namespace: "${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools"
      # - name: Build PR
      #   run: |
      #     echo 'build pr'
      # - name: Update deploy manifests for PR to Argocd
      #   run: |
      #     echo 'update deploy pr'
      # - name: Apply Build Yaml
      #   run: |
      #     cd rsbc_df_vips_adapter_gateway/github_actions_yamls
      #     oc process -f revproxy_build_template.yml --param-file revproxy_build_params.yml --param OUTPUT_IMAGE_STREAM_TAG=pr-build-$GITHUB_SHA | oc apply -f -
      # - name: Start the build and push
      #   run: |
      #     oc start-build ${{ env.build_config_name }} --follow --wait
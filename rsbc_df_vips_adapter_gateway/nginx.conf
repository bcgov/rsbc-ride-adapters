# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/


worker_processes auto;
error_log /var/opt/rh/rh-nginx120/log/nginx/error.log;
pid /var/opt/rh/rh-nginx120/run/nginx/nginx.pid;

# Load dynamic modules. See /opt/rh/rh-nginx120/root/usr/share/doc/README.dynamic.
include /opt/rh/rh-nginx120/root/usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/opt/rh/rh-nginx120/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 4096;

    include       /etc/opt/rh/rh-nginx120/nginx/mime.types;
    default_type  application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /opt/app-root/etc/nginx.d/*.conf;

    server {
        listen       8080 default_server;
        listen       [::]:8080 default_server;
        server_name  _;
        # root         /opt/app-root/src;

        # Load configuration files for the default server block.
        # include      /opt/app-root/etc/nginx.default.d/*.conf;

            # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /opt/rh/rh-nginx120/root/usr/share/nginx/html;
      expires 1d;
    }

    #     location / {
    # #   proxy_pass      http://poc-service;
    #     proxy_pass      https://www.nginx.com;
    # }

    # location /test {
    # #   proxy_pass      http://poc-service;
    #     proxy_pass      https://www.nginx.com;
    # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:8080 default_server
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server { # simple reverse-proxy
    listen       8083;
    server_name  vipsirp-api-service;
    # access_log   logs/domain2.access.log  main;

    # serve static files
    # location ~ ^/(images|javascript|js|css|flash|media|static)/  {
    #   root    /var/www/virtual/big.server.com/htdocs;
    #   expires 30d;
    # }

    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      proxy_pass      http://vipsirp-api-service;
    }
  }

  server { 
		listen 8087;
		location /metrics {
			stub_status on;
		}
}

#     server { # simple reverse-proxy
#     listen       80;
#     server_name  _;
#     # access_log   logs/domain2.access.log  main;

#     # serve static files
#     # location ~ ^/(images|javascript|js|css|flash|media|static)/  {
#     #   root    /var/www/virtual/big.server.com/htdocs;
#     #   expires 30d;
#     # }

#     # pass requests for dynamic content to rails/turbogears/zope, et al
#     location / {
#     #   proxy_pass      http://poc-service;
#         proxy_pass      https://www.nginx.com;
#     }
#   }

  





    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8080 default_server00;
    #    listen       somename:8080 default_server80;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}